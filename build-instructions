make share for postgres DB on fileshare
make secrets file for postgres (don't commit those to git. recommend setting user and db to postgres)
deploy postgres secrets up to k8s
deploy postgres to k8s
after first time launching postgres pod:
    shell into postgres pod
    su  to the user you defined in the postgres secrets as the postgres user
    make user & pw for django (`createuser <username> -P` then enter the password)
    make db for django (`createdb malware -O <username>`)

configure django secrets with user, pw, and db in above
    If you are planning on port-forwarding to the pod to connect to it (you probably will), add the
        hostname of the host names of the boxes you're going to be connecting from to the "EXTRA_HOSTS" entry in
        django_secrets.yaml, comma-separated. That way the "ALLOWED_HOSTS" setting in django will recognize  your
        tunnel to them.
deploy django secrets to k8s
deploy django to k8s

after first time launching django pod:
    shell into pod
    python3 manage.py migrate
    python3 manage.py createsuperuser
    python3 manage.py collectstatic

map a port to the new django pod so you can connect to the new service with a browser and make a new API user
    on k8s server (not a pod)
    kubectl get pods | grep malware-archive-site
    take result and plug into kubectl port-forward <pod-name> --address 0.0.0.0 8000:8000
    point browser to k8s server:8000
