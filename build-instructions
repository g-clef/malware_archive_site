Install and run a postgres image, expose port
docker volume create --driver
docker run -dit --restart unless-stopped -p 0.0.0.0:5432:5432

set postgres password
make postgres user for django
make database for django


docker build . -t analysis/site:1.1 --build-arg "PASTEBIN_PATH=/mnt/paste"
    (PASTEBIN_PATH has to be set identically to the docker launch setting for the volume)

docker tag analysis/site:1.1 gclef/analysis:site-1.1
docker push gclef/analysis:site-1.1


On docker server:
docker pull gclef/analysis:site-1.1
docker volume create --driver local --opt type=nfs --opt o=addr=<IP of NFS SERVER>,nolock,soft,ro  --opt device=:<NFS SERVER SHARE PATH> pastes
    Don't need to do this more than once. If the share hasn't changed, can re-use between pushes of version of app

docker run -dit --restart unless-stopped -e "DB_USER=<pgsql user>" -e "DB_HOST=<pgsql IP>" -e "DB_PW=<pg password>" -e "ALLOWED_IP=<LXD node IP>" -e "ALLOWED_HOST=<LXD node name.lxd>" -p 0.0.0.0:8000:8000  -v pastes:/mnt/paste gclef/analysis:site-1.1


On first run:
docker ps (get hex of container)
docker exec -it (hex of container) /bin/bash
(in container)python3 manage.py migrate
(in container)python3 manage.py createsuperuser
(in container)python3 manage.py collectstatic
